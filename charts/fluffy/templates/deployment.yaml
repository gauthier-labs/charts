apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fluffy.fullname" . }}
  labels:
    {{- include "fluffy.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "fluffy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "fluffy.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.image.privateRegistry.enabled }}
      imagePullSecrets:
        {{- if .Values.image.privateRegistry.createSecret }}
        - name: "docker-registry"
        {{- else }}
        - name: {{ .Values.image.privateRegistry.secretName }}
        {{- end }}
      {{- end }}
      serviceAccountName: {{ include "fluffy.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          {{- if .Values.fluffyConfig }}
          args: ["run", "--config", "/etc/fluffy/config.yaml"]
          {{- else }}
          args: ["run"]
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            # TODO(isan) which port is used for health checks? currently by default SSO
            - name: http-sso
              containerPort: {{ .Values.sso.service.port }}
              protocol: TCP
          {{- if .Values.rbac.enabled -}}
          - name: http-rbac
              containerPort: {{ .Values.rbac.service.port }}
              protocol: TCP
          {{- end }}
          readinessProbe:
            {{- if  ((.Values.readinessProbe).failureThreshold) }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            {{-  end }}
            {{- if  ((.Values.readinessProbe).periodSeconds) }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            {{-  end }}
            {{- if  ((.Values.readinessProbe).successThreshold) }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            {{-  end }}
            {{- if  ((.Values.readinessProbe).timeoutSeconds) }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            {{-  end }}   
            httpGet:
              path: /_health
              # TODO(isan) which service? - we need to check health of both ports 
              port: http-sso
          livenessProbe:
            {{- if  ((.Values.livenessProbe).failureThreshold) }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            {{-  end }}
            {{- if  ((.Values.livenessProbe).periodSeconds) }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            {{-  end }}
            {{- if  ((.Values.livenessProbe).successThreshold) }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            {{-  end }}
            {{- if  ((.Values.livenessProbe).timeoutSeconds) }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            {{-  end }}     
            {{- if  ((.Values.livenessProbe).initialDelaySeconds) }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            {{-  end }}                                                
            httpGet:
              path: /_health
              # TODO(isan) which service?
              port: http-sso
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 12 }}
          {{- end }}
            - name: {{ include "fluffy.fullname" . }}-config
              mountPath: /etc/fluffy/
          {{- if and .Values.sso.enabled (.Values.sso.saml).enabled -}}
            - name: secret-volume
              readOnly: true
              mountPath: "/etc/saml_certs/"
          {{- end }}
          {{- include "fluffy.env" . | nindent 10 }}
      volumes:
        {{- include "fluffy.volumes" . | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
